version: "3.9"

services:
  db:
    image: mysql:5.7
    volumes:
      - db_data:/var/lib/mysql
    container_name: instabugDB
#    restart: always
    ports:
      - '3308:3306'
    environment:
      MYSQL_ROOT_PASSWORD: DockerChat*PassRoot
      MYSQL_DATABASE: docker_chat_system
      MYSQL_USER: docker_chat
      MYSQL_PASSWORD: DockerChat*Pass
      TZ: Africa/FCairo
    command: ['mysqld', '--character-set-server=utf8mb4','--default-time-zone=+02:00']

  rabbitmq:
    image: rabbitmq:3.9-management
    container_name: instabugRabbitMQ
    ports:
      - "5675:5672"
      - "15675:15672"
    environment:
      - RABBITMQ_SECURE_PASSWORD=yes
    volumes:
      - rabbitmq_data:/bitnami/rabbitmq/mnesia


  redis:
    image: redis:latest
    container_name: instabugRedis

  webserver:
    depends_on:
      - rabbitmq
      - redis
      - db
      - logstash
    build: .
    container_name: instabugWebServer
    ports:
      - "3000:3000"
    restart: on-failure
    environment:
      DB_HOST: instabugDB
      DB_USERNAME: docker_chat
      DB_PASSWORD: DockerChat*Pass
      DB_NAME: docker_chat_system
      DB_PORT: 3306
      RABBITMQ_PORT: 5672
      RABBITMQ_HOST: rabbitmq
      REDIS_HOST: redis
      ELASTICSEARCH_URL: http://elasticsearch:9200

  search-rails:
    depends_on:
      - db
      - logstash
      - webserver
    build:
      context: ./search-rails
      dockerfile: Dockerfile
    container_name: instabugSearchRails
    restart: on-failure
    environment:
      PORT: 4500
      DB_HOST: instabugDB
      DB_USERNAME: docker_chat
      DB_PASSWORD: DockerChat*Pass
      DB_NAME: docker_chat_system
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "4500:4500"

  workers:
    depends_on:
      - rabbitmq
      - redis
      - db
      - logstash
    build:
      context: .
      dockerfile: ./workers/Dockerfile
    container_name: instabugWorkers
    restart: on-failure
    environment:
      DB_HOST: instabugDB
      DB_USERNAME: docker_chat
      DB_PASSWORD: DockerChat*Pass
      DB_NAME: docker_chat_system
      DB_PORT: 3306
      RABBITMQ_PORT: 5672
      RABBITMQ_HOST: rabbitmq
      REDIS_HOST: redis

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.1
    container_name: instabugElasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ./volumes/elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "10"
  kibana:
    image: docker.elastic.co/kibana/kibana:7.16.1
    container_name: instabugKibana
    environment:
      - "ELASTICSEARCH_URL=http://elasticsearch:9200"
      - "SERVER_NAME=127.0.0.1"
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
  logstash:
    build:
      context: .
      dockerfile: ./logstash/Dockerfile
    container_name: instabugLogstash
    depends_on:
      - db
      - elasticsearch
    volumes:
      - ./logstash/pipeline/:/usr/share/logstash/pipeline/
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      - ./logstash/config/queries/:/usr/share/logstash/config/queries/

volumes:
  db_data: {}
  rabbitmq_data: {}
